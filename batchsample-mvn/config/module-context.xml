<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">

	<description>サンプル</description>

	<job id="job1" xmlns="http://www.springframework.org/schema/batch" incrementer="jobParametersIncrementer">
		<step id="step1" parent="simpleStep">
			<tasklet>
				<chunk reader="reader1" writer="writer" />
			</tasklet>
		</step>
	</job>

	<bean id="reader1" class="org.springframework.batch.item.database.JdbcPagingItemReader" scope="step">
		<property name="dataSource" ref="sqliteDataSource" />
		<property name="fetchSize" value="10" /> <!-- pageSize分取ってきたあと、さらにメモリ上に展開する量？ -->
		<property name="maxItemCount" value="10000" /> <!-- クエリ×N回で取ってくる、全量に対する上限 -->
		<property name="pageSize" value="1000" /> <!-- 1クエリ中のselect...limit xxxxとかで制限する1ページの量 -->
		<property name="queryProvider" ref="ticketQueryProvider" />
		<property name="rowMapper" ref="ticketRowMapper" />
	</bean>
	<bean id="ticketQueryProvider" class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean">
		<property name="dataSource" ref="sqliteDataSource" />
		<property name="selectClause" value="SELECT *" />
		<property name="fromClause" value="FROM ticket" />
	</bean>
	<bean id="ticketRowMapper" class="satokano.sample.hoge" />

	<bean id="reader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
		<property name="resource" value="#{jobParameters['input.file.name']}" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.PassThroughLineMapper" />
		</property>
	</bean>

	<bean id="writer" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
		<property name="resource" value="#{jobParameters['output.file.name']}" />
		<property name="lineAggregator">
			<bean class="org.springframework.batch.item.file.transform.PassThroughLineAggregator" />
		</property>
	</bean>
	
	<!-- enables the functionality of JobOperator.startNextInstance(jobName) -->
	<bean id="jobParametersIncrementer" class="org.springframework.batch.core.launch.support.RunIdIncrementer" />

	<bean id="simpleStep"
		class="org.springframework.batch.core.step.item.SimpleStepFactoryBean"
		abstract="true">
		<property name="transactionManager" ref="rl-transactionManager" />
		<property name="jobRepository" ref="jobRepository" />
		<property name="startLimit" value="100" />
		<property name="commitInterval" value="1" />
	</bean>

</beans>
